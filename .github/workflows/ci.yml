name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*', 'release-*' ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  lint-and-test:
    name: "🧪 Lint & test shell scripts"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install ShellCheck
        continue-on-error: true
        run: |
          sudo apt-get update -y
          sudo apt-get install -y shellcheck

      - name: Run ShellCheck
        continue-on-error: true
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=( *.sh )
          if [[ ${#files[@]} -gt 0 ]]; then
            shellcheck --severity=warning "${files[@]}"
          else
            echo "No .sh files to lint"
          fi

      - name: Bash syntax check
        continue-on-error: true
        run: |
          set -euo pipefail
          shopt -s nullglob
          for f in *.sh; do
            echo "Checking $f"
            bash -n "$f"
          done

  build-push-scan:
    name: "🚀 Build, push (skopeo) & scan"
    needs: lint-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 🔖 Compute image tags
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME}"
          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            TAG="pr-${{ github.event.pull_request.number }}"
          else
            if [[ -f release.version ]]; then
              TAG="$(cat release.version)"
            else
              TAG="sha-${GITHUB_SHA::7}"
            fi
          fi
          echo "version_tag=${TAG}" >> "$GITHUB_OUTPUT"
          LATEST_TAG=""
          if [[ "${GITHUB_REF_NAME}" == "main" && "${GITHUB_EVENT_NAME}" == "push" ]]; then
            LATEST_TAG="latest"
          fi
          if [[ -n "${LATEST_TAG}" ]]; then
            echo "tags=${TAG} ${LATEST_TAG}" >> "$GITHUB_OUTPUT"
          else
            echo "tags=${TAG}" >> "$GITHUB_OUTPUT"
          fi
          REPO_LC="$(echo "${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]')"
          echo "image_repo=${REPO_LC}" >> "$GITHUB_OUTPUT"
          echo "image_full=${REGISTRY}/${REPO_LC}" >> "$GITHUB_OUTPUT"

      - name: 🏗️ Build image with Buildah
        id: buildah
        uses: redhat-actions/buildah-build@v2
        with:
          context: .
          dockerfiles: |
            ./Dockerfile
          image: ${{ steps.meta.outputs.image_repo }}
          tags: ${{ steps.meta.outputs.tags }}
          oci: true

      - name: 🛡️ Vulnerability scan (Trivy) - repository filesystem
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: fs
          scan-ref: .
          hide-progress: true
          severity: CRITICAL,HIGH
          exit-code: '1'

      - name: 🔑 Login to GHCR
        if: github.event_name != 'pull_request'
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Push image to GHCR with Skopeo
        if: github.event_name != 'pull_request'
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.meta.outputs.image_repo }}
          tags: ${{ steps.meta.outputs.tags }}
          registry: ${{ env.REGISTRY }}

      - name: Show pushed image references
        if: steps.push.outputs.digest
        run: echo "${{ steps.push.outputs.registry-paths }}"

      - name: 🛡️ Vulnerability scan (Trivy) - container image
        if: github.event_name != 'pull_request'
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ steps.meta.outputs.image_full }}:${{ steps.meta.outputs.version_tag }}
          hide-progress: true
          severity: CRITICAL,HIGH
          exit-code: '1'
